shiny::shinyApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
library(shiny)
library(shinycssloaders)
library(coauthornetwork)
?validate
shiny::runApp()
ui <- fluidPage(
checkboxGroupInput('in1', 'Check some letters', choices = head(LETTERS)),
selectizeInput('in2', 'Select a state', choices = state.name),
plotOutput('plot')
)
server <- function(input, output) {
output$plot <- renderPlot({
validate(
need(input$in1, 'Check at least one letter!'),
need(input$in2 != '', 'Please choose a state.')
)
plot(1:10, main = paste(c(input$in1, input$in2), collapse = ', '))
})
}
shinyApp(ui, server)
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
?withSpinner()
renderPlot
?renderPlot
runApp()
install.packages("shinycssloaders")
shiny::runApp()
?fluidPage()
runApp()
shiny::runApp()
?renderPlot
runApp()
runApp()
runApp()
devtools::install_github("cimentadaj/coauthornetwork")
runApp()
grab_network("what")
shiny::runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
plot_coauthors
runApp()
?ggraph::geom_node_text
runApp()
shiny::runApp()
devtools::install_github("cimentadaj/coauthornetwork")
runApp()
plot_coauthors()
plot_coauthors
grab_network("citations?user=amYIKXQAAAAJ&hl=e")
pt <- plot_coauthors(grab_network("citations?user=amYIKXQAAAAJ&hl=e"))
runApp()
grab_network
coauthornetwork::get_coauthors
coauthornetwork:::get_coauthors
runApp()
runApp()
not_error <- tryCatch(grab_network("what"))
not_error <- tryCatch(grab_network("what"), error = function(c) "whatevs")
not_error
class(not_error)
not_error <- tryCatch(grab_network("what"), error = function(c) stop())
class(not_error)
?tryCatch
not_error <- try(grab_network("what"))
not_error <- tryCatch(grab_network("what"), error = function(c) "error")
not_error
shiny::runApp()
runApp()
shiny::runApp()
runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
